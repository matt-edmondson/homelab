# Copy this file to terraform.tfvars and customize for your environment
# cp terraform.tfvars.example terraform.tfvars

# Kubernetes Configuration
kubeconfig_path = "~/.kube/config"

# kube-vip Configuration (DHCP LoadBalancer)
kube_vip_version   = "v0.6.4"    # kube-vip container version
kube_vip_interface = "eth0"      # Network interface (usually eth0, ens160, or enp0s3)

# Security Configuration
baget_api_key           = "your-very-secure-api-key-here-generate-a-random-one"
grafana_admin_password  = "your-secure-grafana-password"

# Storage Configuration
longhorn_replica_count     = 2
baget_storage_size        = "10Gi"
prometheus_storage_size   = "20Gi"
grafana_storage_size      = "10Gi"
alertmanager_storage_size = "5Gi"

# Resource Configuration
baget_memory_request = "256Mi"
baget_memory_limit   = "512Mi"
baget_cpu_request    = "250m"
baget_cpu_limit      = "500m"

# Chart Versions (update as needed)
longhorn_chart_version         = "1.6.2"
prometheus_stack_chart_version = "57.2.0"

# Metrics Server (recommended for kubectl top and HPA)
metrics_server_enabled = true

# Router DNS Setup (after deployment):
# 1. Deploy your services and check router DHCP client list for assigned IPs
# 2. Pin/reserve those IPs in router DHCP settings
# 3. Add DNS A records on router: grafana.k8s.home -> pinned_ip


# Labels
common_labels = {
  "managed-by"  = "terraform"
  "environment" = "homelab"
  "cluster"     = "main"
}
